version: '3.9'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: conda run --no-capture-output -n comedy-project-docker python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/audio-annonation
      - ${MEDIA_ROOT}:/comedy/media
    ports:
      - "8000:8000"
    environment:
      - MEDIA_ROOT=/comedy/media
    depends_on:
      db:
        condition: service_healthy

    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-entrypoint.sh:/db-entrypoint.sh
    
    ports:
    - "5432:5432"

    env_file:
      - .env
    environment:
    - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: ["/db-entrypoint.sh"]

  migrate:
    build: 
      context: .
      dockerfile: Dockerfile
    command: conda run --no-capture-output -n comedy-project-docker python manage.py migrate
    volumes:
      - .:/audio-annonation
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

volumes:
  postgres_data:
