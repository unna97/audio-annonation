[tool.poetry]
name = "audio-annonation"
version = "0.1.0"
description = ""
authors = ["Unnati Patel", "Christopher Keim"]
readme = "README.md"
packages = [
   { include = "api" },
   { include = "waveform_audio" },
]

[tool.poetry.dependencies]
python = ">=3.11, <3.12"

# Web
requests = "^2.31.0"
urllib3 = "^2.0.2"
django = "^4.2.1"
djangorestframework = "^3.14.0"
crispy-tailwind = "^0.5.0"
whitenoise = "^6.6.0"
asgiref = "^3.6.0"
certifi = "^2023.5.7"
tzdata = "^2023.3"
python-dotenv = "^1.0.0"

# Data Science
pandas = "^1.5.0"
numpy = "^1.24.3"
scipy = "^1.10.1"
pyarrow = "^13.0.0"
scikit-learn = "^1.2.2"
matplotlib = "^3.6.0"
sqlparse = "^0.4.4"
audioread = "^3.0.0"
soundfile = "^0.12.1"
pooch = "^1.6.0"
soxr = "^0.3.5"
librosa = "^0.10.0.post2"

# MLOps
threadpoolctl = "^3.1.0"
numba = "^0.57.0"
llvmlite = "^0.40.0"
cffi = "^1.15.1"



[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]

# DevOps
black = "^22.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.0.285"

# PostgresSQL psycopg2 pre-compiled binary
psycopg2-binary = "^2.9.9"


[tool.poetry.group.prod]
optional = true
[tool.poetry.group.prod.dependencies]

# PostgresSQL psycopg2 source build 
psycopg2 = "^2.9.9"


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pytest.ini_options]
# Configurations for pytest with coverage
addopts = "-vv --cov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"